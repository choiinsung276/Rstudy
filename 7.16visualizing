#### 기본 내장 그래프 ####

#plot()
#plot(y축 데이터, 옵션)
#plot(x축 데이터, y축 데이터, 옵션)
y <- c(1,1,2,2,3,3,4,4,5,5)
plot(y)

x<- 1:10
y<- 1:10
plot(x,y)
#xlim,ylim x,y축의 값 범위
# main =그래프 제목
# type = 그래프 유형, 점p, 선l, 점선모두 b
# pch 점의종류
plot(x,y,xlim=c(0,20),ylim=c(0,30), main="Graph",
     type ="o", pch = 3)

x<-runif(100)
y<-runif(100)
plot(x,y, pch=ifelse(y>0.5, 1, 18))

#barplot(), hist, pie, mosaicplot, pair, persp, contour
# 그래프 배열
head(mtcars)
?mtcars
str(mtcars)

# 그래프를 4개 그리기
# 그래프 개수 만들어주는 함수 par()
par(mfrow = c(2,2))
plot(x,y)
par(mfrow= c(1,1))
par(mfrow = c(2,2))

plot(mtcars$wt, mtcars$mpg)
plot(mtcars$wt, mtcars$disp)
hist(mtcars$wt)
boxplot(mtcars$wt)
# 빗자루로 지우거나 par함수 쓰거나
# par(mfrom= c(1,1))
# par(mfrow = c(2,2))

par(mfrow= c(1,1))

#행 또는 열마다 그래프 갯수를 다르게 설정
?layout
# 기준 byrow, 첫번쨰, 
layout(matrix(c(1,1,2,3),2,2,byrow=T))
hist(mtcars$wt)
hist(mtcars$mpg)
hist(mtcars$disp)
#### 특이한 그래)
par(mfrow = c(1, 1))
### 특이한 그래프
x <- c(1, 3, 6, 8, 9)
y <- c(12, 56, 78, 32, 9)
plot(x, y)
arrows(3, 56, 1, 12)
text(4, 40, '이것은 샘플입니다.', srt = 55)

# 꽃잎 그래프
x <- c(1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 4, 5, 6, 6, 6)
y <- c(2, 1, 4, 2, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1)
plot(x, y)

z <- data.frame(x, y)
sunflowerplot(z)

# 별 그래프
# 데이터의 전체적인 윤곽을 살펴보는 그래프
# 데이터 항복에 대한 변화의 정도를 한눈에 파악

head(mtcars)
str(mtcars)
stars(mtcars[1:4])
#draw.segments = True일때 segment그림
#flip.labels =False 동일한 방향에 라벨출력 true = 라벨이 겹치지않게
# unit key를 그릴 좌표 지정 key.loc
stars(mtcars[1:4], flip.labels=F, key.loc=c(13, 1.5),
       draw.segments = T)

#symbols
x <- c(1,2,3,4,5)
y <- c(2,3,4,5,6)
z <- c(10,5,100,20,10)

symbols(x,y,z)

#### ggplot2 ####
# https://exts.ggplot2.tidyverse.org/
# https://www.r-graph-gallery.com/ggplot2-package.html
# 레이어 지원
# 1) 배경 설정
# 2) 그래프 추가(점, 막대, 선, ...)
# 3) 설정 추가(축 범위, 범례, 색, 표식, ...)

install.packages("ggplot2")
library(ggplot2)
#산포도
head(mpg)
ggplot(data=mpg,aes(x=displ, y=hwy)) +geom_point()
ggplot(data=mpg,aes(x=displ, y=hwy)) +geom_point() +
  xlim(3,6) + ylim(10,30)

# cty와 hwy
ggplot(mpg,aes(cty,hwy)) +geom_point()
# midwest 데이터를 이용하여 전체인구(poptotal)
#와 아시아 인구간(popasian)에 어떤관계가 있는지
# x축은 전체인구, y축은 아시아 인구로 된 산포도 작성
# 단, 전체인구는 30만명이하, 아시아인구는 1만명 이하인 지역만 산점도 표시
options(scipen = 99) #지수를 숫자로 표현 
ggplot(midwest,aes(poptotal,popasian)) +geom_point() +
  xlim(0,300000) +ylim(0,10000)

#### 막대그래프 : geom_col() ####
library(dplyr)
#구동방식별(drv)로 고속도로 평균 연비
df_mpg <-mpg %>% 
  group_by(drv) %>% summarise(mean_hwy=mean(hwy))
# 오름차순
ggplot(df_mpg, aes(reorder(drv, mean_hwy),mean_hwy)) + geom_col()
# 내림차순
ggplot(df_mpg, aes(reorder(drv, -mean_hwy),mean_hwy)) + geom_col()
ggplot(mpg,aes(drv)) +geom_bar()
ggplot(mpg, aes(hwy)) + geom_bar()
#시험문제
#어떤회사에서 생산한"suv"차종의 도시 연비가 높은지 알아보려고한다.
# "suv"차종을 대상으로 평균 cty가 가장 높은 회사 다섯 곳을 
#막대그래프로 출력 (막대는 연비가 높은 순으로 정렬)
?mpg
df_mpg2 <-mpg %>% group_by(manufacturer) %>% filter(class=="suv") %>%
  summarise(mean_cty = mean(cty)) %>% arrange(desc(mean_cty)) %>% head(5) 
ggplot(df_mpg2, aes(reorder(manufacturer, -mean_cty),mean_cty)) +geom_col()

df_suv <- mpg %>% group_by(manufacturer) %>% filter(class == 'suv') %>% summarise(mean_cty=mean(cty)) %>% arrange(desc(mean_cty)) %>% head(5)

ggplot(df_suv, aes(reorder(manufacturer, -mean_cty), mean_cty)) + geom_col() 


#자동차 중에서 어떤 종류(class)가 가장 많은지 알아보려고한다.
#자동차 종류별 빈도를 막대 그래프로 출력
table(mpg$class)
ggplot(mpg, aes(class)) + geom_bar()

#### 선그래프 : geom_line() ####
head(economics)
tail(economics)

ggplot(economics, aes(date,unemploy)) +geom_line()


#### 상자 그래프 : geom_boxplot() ####

ggplot(mpg, aes(drv, hwy)) + geom_boxplot()

# class가 "compact", "subcompact" , "suv" 인 자동차의
#cty가 어떻게 다른지 비교해 보려고한다. 세차종의 cty를
# 나타낸 상자 그래프 출력

df_boxp <-mpg %>% filter(class =="compact"|class =="subcompact"|class =="suv") %>%
   select(class, cty)
ggplot(df_boxp, aes(class, cty)) +geom_boxplot()
class_mpg <- mpg %>% filter(class %in% c("compact","subcompact",
                                         "suv"))
ggplot(class_mpg, aes(class, cty)) +geom_boxplot()

#### 인터렉티브 그래프
# https://plot.ly/ggplot2
install.packages("plotly")
library(plotly)

#특정구간 드래그후 다시 더블클릭으로 돌아감
p <- ggplot(class_mpg, aes(class, cty)) +geom_boxplot()
ggplotly(p)

p1<-ggplot(mpg, aes(displ, hwy, col = drv)) + geom_boxplot()
ggplotly(p1)

# export 버튼 누르고 save as web page
head(diamonds)
#fill 속성은 단계별로 나타내줌 aes안에 여러속성이있음
#geom_bar에 position="dodge" 속성
p<-ggplot(diamonds, aes(x=cut, fill=clarity)) + geom_bar(
  position = "dodge")
ggplotly(p)

# 시계열 데이터
install.packages("dygraphs")
library(dygraphs)

head(economics)
str(economics)

dygraph(economics)
d <- ggplot(economics, aes(date, unemploy)) + geom_line()
d

library(xts)
#unemply 는 num 숫자인데 시간의 정보를 갖을수있게해준다.
eco <-xts(economics$unemploy, order.by = economics$date)
head(eco)
str(eco)

dygraph(eco)
#dyRangeselector()x 
dygraph(eco) %>% dyRangeSelector()

eco_a <- xts(economics$psavert, order.by=economics$date)
eco_b <- xts(economics$unemploy/1000, order.by=economics$date)

eco2 <- cbind(eco_a, eco_b)
colnames(eco2) <-c("psavert","unemploy")
head(eco2)
dygraph(eco2) %>% dyRangeSelector()

#### 지도 그래프(단계 구분도, CHoropleth Map) ####
install.packages("ggiraphExtra")
library(ggiraphExtra)

head(USArrests)
str(USArrests)

library(tibble)

crime <- rownames_to_column(USArrests, var="state")
head(crime)
str(crime)

crime$state <- tolower(crime$state)
head(crime)

install.packages("maps")
install.packages("mapproj")
state_map <- map_data("state")
head(state_map)
str(state_map)

ggChoropleth(data =crime, aes(fill=Murder, map_id=state),
             map = state_map, interactive = T)

# 대한민국 지도 만들기
# https://github.com/cardiomoon/kormaps2014

install.packages("stringi")
install.packages("devtools")

devtools::install_github("cardiomoon/kormaps2014")
library(kormaps2014)
# korpop1 시도
head(korpop1)
str(korpop1)

head(kormap1)
#한글 안꺠지도록
str(changeCode(korpop1))
head(changeCode(korpop1))

library(dplyr)
korpop1 <- rename(korpop1,pop="총인구_명", name="행정구역별_읍면동")
str(korpop1)
library(ggplot2)
ggChoropleth(data=korpop1, aes(fill=pop, map_id=code,
                               tooltip=name),map=kormap1,
             interactive=T)
str(changeCode(tbc))

tbc <-changeCode(tbc)
ggChoropleth(data=tbc, aes(fill=NewPts, map_id=code,
                               tooltip=name),map=kormap1,
             interactive=T)

####            ####
install.packages("rJava")
install.packages("memoise")
install.packages("KoNLP")

library(KoNLP)
library(dplyr)
